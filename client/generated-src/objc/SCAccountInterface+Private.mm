// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from account.djinni

#import "SCAccountInterface+Private.h"
#import "SCAccountInterface.h"
#import "DJICppWrapperCache+Private.h"
#import "DJIError.h"
#import "DJIMarshal+Private.h"
#import "SCAccountListener+Private.h"
#import "SCLoginMsg+Private.h"
#import "SCSignupMsg+Private.h"
#include <exception>
#include <stdexcept>
#include <utility>

static_assert(__has_feature(objc_arc), "Djinni requires ARC to be enabled for this file");

@interface SCAccountInterface ()

- (id)initWithCpp:(const std::shared_ptr<::account_djinni::AccountInterface>&)cppRef;

@end

@implementation SCAccountInterface {
    ::djinni::CppProxyCache::Handle<std::shared_ptr<::account_djinni::AccountInterface>> _cppRefHandle;
}

- (id)initWithCpp:(const std::shared_ptr<::account_djinni::AccountInterface>&)cppRef
{
    if (self = [super init]) {
        _cppRefHandle.assign(cppRef);
    }
    return self;
}

+ (nullable SCAccountInterface *)getInstance {
    try {
        auto objcpp_result_ = ::account_djinni::AccountInterface::get_instance();
        return ::djinni_generated::AccountInterface::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (void)init {
    try {
        _cppRefHandle.get()->init();
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (void)addListener:(nullable id<SCAccountListener>)listener {
    try {
        _cppRefHandle.get()->add_listener(::djinni_generated::AccountListener::toCpp(listener));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (void)removeListener:(nullable id<SCAccountListener>)listener {
    try {
        _cppRefHandle.get()->remove_listener(::djinni_generated::AccountListener::toCpp(listener));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (void)signup:(nonnull SCSignupMsg *)info {
    try {
        _cppRefHandle.get()->signup(::djinni_generated::SignupMsg::toCpp(info));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (void)login:(nonnull SCLoginMsg *)info {
    try {
        _cppRefHandle.get()->login(::djinni_generated::LoginMsg::toCpp(info));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (void)logout {
    try {
        _cppRefHandle.get()->logout();
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (void)isAlive {
    try {
        _cppRefHandle.get()->is_alive();
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (BOOL)hasLogin {
    try {
        auto objcpp_result_ = _cppRefHandle.get()->has_login();
        return ::djinni::Bool::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

namespace djinni_generated {

auto AccountInterface::toCpp(ObjcType objc) -> CppType
{
    if (!objc) {
        return nullptr;
    }
    return objc->_cppRefHandle.get();
}

auto AccountInterface::fromCppOpt(const CppOptType& cpp) -> ObjcType
{
    if (!cpp) {
        return nil;
    }
    return ::djinni::get_cpp_proxy<SCAccountInterface>(cpp);
}

}  // namespace djinni_generated

@end
